variable "accelerator" {
  type    = string
  default = "kvm"
}

variable "disk_size" {
  type    = string
  default = "80G"
}

variable "output_directory" {
  type    = string
  default = "build/"
}

variable "vm_cpus" {
  type    = string
  default = "2"
}

variable "vm_description" {
  type    = string
  default = "An Alpine Linux x86_64 based Docker host (minimal) operating system"
}

variable "vm_memory" {
  type    = string
  default = "4096"
}

variable "vm_name" {
  type    = string
  default = "alpine-docker-host"
}

variable "vm_product" {
  type    = string
  default = "Alpine Docker Host OS"
}

variable "vm_producturl" {
  type    = string
  default = "https://alpinelinux.org/"
}

variable "vm_vendor" {
  type    = string
  default = "Alpine Linux"
}

variable "vm_vendorurl" {
  type    = string
  default = "https://alpinelinux.org/"
}

variable "vm_version" {
  type    = string
  default = "1.0.0.0"
}

# "timestamp" template function replacement
locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

source "qemu" "autogenerated_1" {
  accelerator      = "${var.accelerator}"
  boot_command     = ["root<enter><wait>", "ifconfig eth0 up && udhcpc -i eth0<enter><wait10>", "wget http://{{ .HTTPIP }}:{{ .HTTPPort }}/answers<enter><wait>", "setup-alpine -f $PWD/answers<enter><wait5>", "alpine<enter><wait>", "alpine<enter><wait>", "<wait10><wait10><wait10>", "y<enter>", "<wait2m>", "rc-service sshd stop<enter>", "mount /dev/sda2 /mnt<enter>", "echo 'PermitRootLogin yes' >> /mnt/etc/ssh/sshd_config<enter>", "umount /mnt<enter>", "reboot<enter>"]
  boot_wait        = "60s"
  communicator     = "ssh"
  disk_interface   = "virtio-scsi"
  disk_size        = "${var.disk_size}"
  format           = "qcow2"
  headless         = true
  http_directory   = "http"
  iso_checksum     = "sha256:e6bbcab275b704bc6521781f2342fff084700b458711fdf315a5816d9885943c"
  iso_urls         = ["https://dl-cdn.alpinelinux.org/alpine/v3.13/releases/x86_64/alpine-virt-3.13.5-x86_64.iso"]
  net_device       = "virtio-net"
  output_directory = "${var.output_directory}"
  shutdown_command = "/sbin/poweroff"
  ssh_password     = "alpine"
  ssh_username     = "root"
  ssh_wait_timeout = "10m"
  vm_name          = "${var.vm_name}"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/from-1.5/blocks/build
build {
  description = "An Alpine Linux x86_64 based Docker host (minimal) operating system"

  sources = ["source.qemu.autogenerated_1"]

  provisioner "shell" {
    scripts = [
      "scripts/00-configure-base.sh",
      "scripts/10-install-packages.sh",
      "scripts/20-configure-networking.sh",
      "scripts/25-configure-sshd.sh",
      "scripts/30-configure-users.sh",
      "scripts/60-configure-docker.sh",
      "scripts/99-minimize-disk.sh"
    ]
  }
}
